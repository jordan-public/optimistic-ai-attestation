{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_optimisticOracleV3",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "DataAsserted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "DataAssertionResolved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        }
      ],
      "name": "assertDataFor",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "assertionDisputedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assertionLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "assertedTruthfully",
          "type": "bool"
        }
      ],
      "name": "assertionResolvedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertionsData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "resolved",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oo",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162001471380380620014718339810160408190526200003491620000d4565b6001600160a01b03808316608052811660a08190526040805163d509b01760e01b8152905163d509b017916004808201926020929091908290030181865afa15801562000085573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ab91906200010c565b60c05250620001269050565b80516001600160a01b0381168114620000cf57600080fd5b919050565b60008060408385031215620000e857600080fd5b620000f383620000b7565b91506200010360208401620000b7565b90509250929050565b6000602082840312156200011f57600080fd5b5051919050565b60805160a05160c0516112dd62000194600039600081816101fd015261049401526000818161010b015281816102d7015281816103a8015281816103cf01526105c6015260008181609d015281816102a90152818161035101528181610386015261047001526112dd6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b33893da11610066578063b33893da1461014e578063b75d4e24146101c3578063d448a4ec146101e5578063d509b017146101f8578063f1b156b21461021f57600080fd5b806320402e1d1461009857806354f6127f146100dc5780638921a6141461010657806393ee663b1461012d575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ef6100ea366004610e15565b610232565b6040805192151583526020830191909152016100d3565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b61014061013b366004610e2e565b610279565b6040519081526020016100d3565b61019261015c366004610e15565b6000602081905290815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b6040516100d3949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6101cc611c2081565b60405167ffffffffffffffff90911681526020016100d3565b6101f66101f3366004610e15565b50565b005b6101407f000000000000000000000000000000000000000000000000000000000000000081565b6101f661022d366004610e81565b6105bb565b6000818152602081905260408120600201548190600160a01b900460ff1661025f57506000928392509050565b505060009081526020819052604090206001908101549091565b60006001600160a01b038216156102905781610292565b335b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529193506000917f00000000000000000000000000000000000000000000000000000000000000001690634360af3d90602401602060405180830381865afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610eb1565b90506103796001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846106c6565b6103cd6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610737565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636457c97961040586610856565b61040e88610856565b61041787610897565b610420426108ee565b61042930610897565b60405160200161043d959493929190610f0a565b60408051601f19818403018152908290526001600160e01b031960e084901b1682526104be9187903090600090611c20907f0000000000000000000000000000000000000000000000000000000000000000908a907f0000000000000000000000000000000000000000000000000000000000000000908590600401611102565b6020604051808303816000875af11580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190610eb1565b6040805160808101825287815260208082018881526001600160a01b0380891684860181815260006060870181815289825295819052879020955186559251600186015591516002909401805493511515600160a01b026001600160a81b03199094169490911693909317919091179091559051919350839187907f29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec906105ab9089815260200190565b60405180910390a4509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105f057600080fd5b8015610699576000828152602081815260409182902060028101805460ff60a01b198116600160a01b9081179283905585516080810187528454808252600195909501549581018690526001600160a01b03909216828701819052920460ff1615156060820152935186939192917fe49ab75dd8ad20084c43aacc9218434d61af074f44263f887212c41ad2d41c9d9161068c91815260200190565b60405180910390a4505050565b506000908152602081905260408120818155600181019190915560020180546001600160a81b0319169055565b6040516001600160a01b03808516602483015283166044820152606481018290526107319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a1a565b50505050565b8015806107b15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af9190610eb1565b155b6108215760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b03831660248201526044810182905261085190849063095ea7b360e01b906064016106fa565b505050565b6060610865608083901c610aec565b61086e83610aec565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606108af6001600160801b03602084901c16610aec565b6108ca8360601b6bffffffffffffffffffffffff1916610aec565b6040516020016108819291909182526001600160c01b031916602082015260280190565b6060816000036109155750506040805180820190915260018152600360fc1b602082015290565b8160005b811561093f578061092981611186565b91506109389050600a836111b5565b9150610919565b60008167ffffffffffffffff81111561095a5761095a6111d7565b6040519080825280601f01601f191660200182016040528015610984576020820181803683370190505b509050815b8515610a115761099a6001826111ed565b905060006109a9600a886111b5565b6109b490600a611206565b6109be90886111ed565b6109c9906030611225565b905060008160f81b9050808484815181106109e6576109e661123e565b60200101906001600160f81b031916908160001a905350610a08600a896111b5565b97505050610989565b50949350505050565b6000610a6f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c859092919063ffffffff16565b8051909150156108515780806020019051810190610a8d9190611254565b6108515760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610818565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681610c0757610c0761119f565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b6060610c948484600085610c9c565b949350505050565b606082471015610cfd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610818565b600080866001600160a01b03168587604051610d199190611278565b60006040518083038185875af1925050503d8060008114610d56576040519150601f19603f3d011682016040523d82523d6000602084013e610d5b565b606091505b5091509150610d6c87838387610d77565b979650505050505050565b60608315610de6578251600003610ddf576001600160a01b0385163b610ddf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610818565b5081610c94565b610c948383815115610dfb5781518083602001fd5b8060405162461bcd60e51b81526004016108189190611294565b600060208284031215610e2757600080fd5b5035919050565b600080600060608486031215610e4357600080fd5b833592506020840135915060408401356001600160a01b0381168114610e6857600080fd5b809150509250925092565b80151581146101f357600080fd5b60008060408385031215610e9457600080fd5b823591506020830135610ea681610e73565b809150509250929050565b600060208284031215610ec357600080fd5b5051919050565b60005b83811015610ee5578181015183820152602001610ecd565b50506000910152565b60008151610f00818560208601610eca565b9290920192915050565b7f54686520666f6c6c6f77696e672043494420636f6e7461696e7320612073746181527f74656d656e742074686174207761732061637475616c6c792067656e65726174602082015267656420627920414960c01b604082015260008651610f79816048850160208b01610eca565b6e040ccdee440c8c2e8c292c8744060f608b1b6048918401918201528651610fa8816057840160208b01610eca565b70040c2dcc840c2e6e6cae4e8cae4744060f607b1b605792909101918201528551610fda816068840160208a01610eca565b6e01030ba103a34b6b2b9ba30b6b81d1608d1b60689290910191820152845161100a816077840160208901610eca565b6110c961105461104e6077848601017f20696e207468652044617461417373657274657220636f6e747261637420617481526204060f60eb1b602082015260230190565b87610eee565b7f2069732076616c69642e20496e737472756374696f6e732061743a206874747081527f733a2f2f6769746875622e636f6d2f6a6f7264616e2d7075626c69632f6f707460208201527f696d69737469632d61692d6174746573746174696f6e2f747265652f6d61696e604082015260600190565b9998505050505050505050565b600081518084526110ee816020860160208601610eca565b601f01601f19169290920160200192915050565b60006101208083526111168184018d6110d6565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161119857611198611170565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111d257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b8181038181111561120057611200611170565b92915050565b600081600019048311821515161561122057611220611170565b500290565b60ff818116838216019081111561120057611200611170565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561126657600080fd5b815161127181610e73565b9392505050565b6000825161128a818460208701610eca565b9190910192915050565b60208152600061127160208301846110d656fea26469706673582212200d305e8290259a4934bf01e65cdf2b5f2729e6f19e728aa1d2cb57a2a1f146b264736f6c63430008100033",
    "sourceMap": "709:5195:20:-:0;;;1648:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1725:42:20;;;;;1777:53;;;;;;1860:22;;;-1:-1:-1;;;1860:22:20;;;;:20;;:22;;;;;;;;;;;;;;;1777:53;1860:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1840:42;;-1:-1:-1;709:5195:20;;-1:-1:-1;709:5195:20;14:177:21;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:184::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;-1:-1:-1;656:16:21;;494:184;-1:-1:-1;494:184:21:o;:::-;709:5195:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063b33893da11610066578063b33893da1461014e578063b75d4e24146101c3578063d448a4ec146101e5578063d509b017146101f8578063f1b156b21461021f57600080fd5b806320402e1d1461009857806354f6127f146100dc5780638921a6141461010657806393ee663b1461012d575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ef6100ea366004610e15565b610232565b6040805192151583526020830191909152016100d3565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b61014061013b366004610e2e565b610279565b6040519081526020016100d3565b61019261015c366004610e15565b6000602081905290815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b6040516100d3949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6101cc611c2081565b60405167ffffffffffffffff90911681526020016100d3565b6101f66101f3366004610e15565b50565b005b6101407f000000000000000000000000000000000000000000000000000000000000000081565b6101f661022d366004610e81565b6105bb565b6000818152602081905260408120600201548190600160a01b900460ff1661025f57506000928392509050565b505060009081526020819052604090206001908101549091565b60006001600160a01b038216156102905781610292565b335b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529193506000917f00000000000000000000000000000000000000000000000000000000000000001690634360af3d90602401602060405180830381865afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610eb1565b90506103796001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846106c6565b6103cd6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610737565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636457c97961040586610856565b61040e88610856565b61041787610897565b610420426108ee565b61042930610897565b60405160200161043d959493929190610f0a565b60408051601f19818403018152908290526001600160e01b031960e084901b1682526104be9187903090600090611c20907f0000000000000000000000000000000000000000000000000000000000000000908a907f0000000000000000000000000000000000000000000000000000000000000000908590600401611102565b6020604051808303816000875af11580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190610eb1565b6040805160808101825287815260208082018881526001600160a01b0380891684860181815260006060870181815289825295819052879020955186559251600186015591516002909401805493511515600160a01b026001600160a81b03199094169490911693909317919091179091559051919350839187907f29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec906105ab9089815260200190565b60405180910390a4509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105f057600080fd5b8015610699576000828152602081815260409182902060028101805460ff60a01b198116600160a01b9081179283905585516080810187528454808252600195909501549581018690526001600160a01b03909216828701819052920460ff1615156060820152935186939192917fe49ab75dd8ad20084c43aacc9218434d61af074f44263f887212c41ad2d41c9d9161068c91815260200190565b60405180910390a4505050565b506000908152602081905260408120818155600181019190915560020180546001600160a81b0319169055565b6040516001600160a01b03808516602483015283166044820152606481018290526107319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a1a565b50505050565b8015806107b15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af9190610eb1565b155b6108215760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b03831660248201526044810182905261085190849063095ea7b360e01b906064016106fa565b505050565b6060610865608083901c610aec565b61086e83610aec565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606108af6001600160801b03602084901c16610aec565b6108ca8360601b6bffffffffffffffffffffffff1916610aec565b6040516020016108819291909182526001600160c01b031916602082015260280190565b6060816000036109155750506040805180820190915260018152600360fc1b602082015290565b8160005b811561093f578061092981611186565b91506109389050600a836111b5565b9150610919565b60008167ffffffffffffffff81111561095a5761095a6111d7565b6040519080825280601f01601f191660200182016040528015610984576020820181803683370190505b509050815b8515610a115761099a6001826111ed565b905060006109a9600a886111b5565b6109b490600a611206565b6109be90886111ed565b6109c9906030611225565b905060008160f81b9050808484815181106109e6576109e661123e565b60200101906001600160f81b031916908160001a905350610a08600a896111b5565b97505050610989565b50949350505050565b6000610a6f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c859092919063ffffffff16565b8051909150156108515780806020019051810190610a8d9190611254565b6108515760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610818565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681610c0757610c0761119f565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b6060610c948484600085610c9c565b949350505050565b606082471015610cfd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610818565b600080866001600160a01b03168587604051610d199190611278565b60006040518083038185875af1925050503d8060008114610d56576040519150601f19603f3d011682016040523d82523d6000602084013e610d5b565b606091505b5091509150610d6c87838387610d77565b979650505050505050565b60608315610de6578251600003610ddf576001600160a01b0385163b610ddf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610818565b5081610c94565b610c948383815115610dfb5781518083602001fd5b8060405162461bcd60e51b81526004016108189190611294565b600060208284031215610e2757600080fd5b5035919050565b600080600060608486031215610e4357600080fd5b833592506020840135915060408401356001600160a01b0381168114610e6857600080fd5b809150509250925092565b80151581146101f357600080fd5b60008060408385031215610e9457600080fd5b823591506020830135610ea681610e73565b809150509250929050565b600060208284031215610ec357600080fd5b5051919050565b60005b83811015610ee5578181015183820152602001610ecd565b50506000910152565b60008151610f00818560208601610eca565b9290920192915050565b7f54686520666f6c6c6f77696e672043494420636f6e7461696e7320612073746181527f74656d656e742074686174207761732061637475616c6c792067656e65726174602082015267656420627920414960c01b604082015260008651610f79816048850160208b01610eca565b6e040ccdee440c8c2e8c292c8744060f608b1b6048918401918201528651610fa8816057840160208b01610eca565b70040c2dcc840c2e6e6cae4e8cae4744060f607b1b605792909101918201528551610fda816068840160208a01610eca565b6e01030ba103a34b6b2b9ba30b6b81d1608d1b60689290910191820152845161100a816077840160208901610eca565b6110c961105461104e6077848601017f20696e207468652044617461417373657274657220636f6e747261637420617481526204060f60eb1b602082015260230190565b87610eee565b7f2069732076616c69642e20496e737472756374696f6e732061743a206874747081527f733a2f2f6769746875622e636f6d2f6a6f7264616e2d7075626c69632f6f707460208201527f696d69737469632d61692d6174746573746174696f6e2f747265652f6d61696e604082015260600190565b9998505050505050505050565b600081518084526110ee816020860160208601610eca565b601f01601f19169290920160200192915050565b60006101208083526111168184018d6110d6565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161119857611198611170565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111d257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b8181038181111561120057611200611170565b92915050565b600081600019048311821515161561122057611220611170565b500290565b60ff818116838216019081111561120057611200611170565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561126657600080fd5b815161127181610e73565b9392505050565b6000825161128a818460208701610eca565b9190910192915050565b60208152600061127160208301846110d656fea26469706673582212200d305e8290259a4934bf01e65cdf2b5f2729e6f19e728aa1d2cb57a2a1f146b264736f6c63430008100033",
    "sourceMap": "709:5195:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:39;;;;;;;;-1:-1:-1;;;;;194:32:21;;;176:51;;164:2;149:18;778:39:20;;;;;;;;2008:208;;;;;;:::i;:::-;;:::i;:::-;;;;616:14:21;;609:22;591:41;;663:2;648:18;;641:34;;;;564:18;2008:208:20;423:258:21;823:47:20;;;;;2603:2259;;;;;;:::i;:::-;;:::i;:::-;;;1504:25:21;;;1492:2;1477:18;2603:2259:20;1358:177:21;1265:55:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1265:55:20;;;-1:-1:-1;;;1265:55:20;;;;;;;;;;;;;;;1765:25:21;;;1821:2;1806:18;;1799:34;;;;-1:-1:-1;;;;;1869:32:21;1864:2;1849:18;;1842:60;1945:14;1938:22;1933:2;1918:18;;1911:50;1752:3;1737:19;;1540:427;876:47:20;;919:4;876:47;;;;;2146:18:21;2134:31;;;2116:50;;2104:2;2089:18;876:47:20;1972:200:21;5837:65:20;;;;;;:::i;:::-;;;;;929:42;;;;;4912:728;;;;;;:::i;:::-;;:::i;2008:208::-;2067:4;2097:27;;;;;;;;;;:36;;;2067:4;;-1:-1:-1;;;2097:36:20;;;;2092:60;;-1:-1:-1;2143:5:20;;;;-1:-1:-1;2008:208:20;-1:-1:-1;2008:208:20:o;2092:60::-;-1:-1:-1;;2176:14:20;:27;;;;;;;;;;2170:4;2176:32;;;;2170:4;;2008:208::o;2603:2259::-;2720:19;-1:-1:-1;;;;;2762:22:20;;;:46;;2800:8;2762:46;;;2787:10;2762:46;2833:43;;-1:-1:-1;;;2833:43:20;;-1:-1:-1;;;;;2859:15:20;194:32:21;;2833:43:20;;;176:51:21;2751:57:20;;-1:-1:-1;;;2833:2:20;:17;;;;149:18:21;;2833:43:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2818:58;-1:-1:-1;2892:65:20;-1:-1:-1;;;;;2892:15:20;:32;2925:10;2945:4;2818:58;2892:32;:65::i;:::-;2967:46;-1:-1:-1;;;;;2967:15:20;:27;3003:2;3008:4;2967:27;:46::i;:::-;3628:2;-1:-1:-1;;;;;3628:14:20;;3850:27;3872:4;3850:21;:27::i;:::-;3930:29;3952:6;3930:21;:29::i;:::-;4014:38;4043:8;4014:28;:38::i;:::-;4105:42;4131:15;4105:25;:42::i;:::-;4220:43;4257:4;4220:28;:43::i;:::-;3656:737;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3656:737:20;;;;;;;;;;-1:-1:-1;;;;;;3628:1021:20;;;;;;;;;4407:8;;4437:4;;4464:1;;919:4;;4537:15;;4566:4;;4584:17;;4464:1;;3628:1021;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4689:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4689:102:20;;;;;;;;;-1:-1:-1;4689:102:20;;;;;;4659:27;;;;;;;;;;:132;;;;;;4689:102;4659:132;;;;;;;;;;;;;;;-1:-1:-1;;;4659:132:20;-1:-1:-1;;;;;;4659:132:20;;;;;;;;;;;;;;;;;;4806:49;;3614:1035;;-1:-1:-1;3614:1035:20;;4716:6;;4806:49;;;;4736:4;1504:25:21;;1492:2;1477:18;;1358:177;4806:49:20;;;;;;;;2741:2121;2603:2259;;;;;:::o;4912:728::-;5040:10;-1:-1:-1;;;;;5062:2:20;5040:25;;5032:34;;;;;;5155:18;5151:482;;;5189:14;:27;;;;;;;;;;;;:36;;;:43;;-1:-1:-1;;;;5189:43:20;;-1:-1:-1;;;5189:43:20;;;;;;;5246:64;;;;;;;;;;;;5228:4;5246:64;;;;;;;;;;;-1:-1:-1;;;;;5246:64:20;;;;;;;;;;;5189:43;5246:64;;;;;;;5329:178;;5204:11;;5246:64;;;5329:178;;;;1504:25:21;;1492:2;1477:18;;1358:177;5329:178:20;;;;;;;;5175:418;4912:728;;:::o;5151:482::-;-1:-1:-1;5606:14:20;:27;;;;;;;;;;5599:34;;;;;;;;;;;;;;-1:-1:-1;;;;;;5599:34:20;;;4912:728::o;974:241:14:-;1139:68;;-1:-1:-1;;;;;7576:15:21;;;1139:68:14;;;7558:34:21;7628:15;;7608:18;;;7601:43;7660:18;;;7653:34;;;1112:96:14;;1132:5;;-1:-1:-1;;;1162:27:14;7493:18:21;;1139:68:14;;;;-1:-1:-1;;1139:68:14;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:14;-1:-1:-1;;;;;;1139:68:14;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;1475:603::-;1830:10;;;1829:62;;-1:-1:-1;1846:39:14;;-1:-1:-1;;;1846:39:14;;1870:4;1846:39;;;7910:34:21;-1:-1:-1;;;;;7980:15:21;;;7960:18;;;7953:43;1846:15:14;;;;;7845:18:21;;1846:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:14;;8209:2:21;1808:163:14;;;8191:21:21;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:21;;;8331:52;8400:19;;1808:163:14;;;;;;;;;2008:62;;-1:-1:-1;;;;;8622:32:21;;2008:62:14;;;8604:51:21;8671:18;;;8664:34;;;1981:90:14;;2001:5;;-1:-1:-1;;;2031:22:14;8577:18:21;;2008:62:14;8430:274:21;1981:90:14;1475:603;;;:::o;2586:182:16:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;8866:19:21;;;;8901:12;;8894:28;8938:12;;2678:83:16;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;-1:-1:-1;;;;;3287:26:16;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;9116:19:21;;;-1:-1:-1;;;;;;9165:41:21;9160:2;9151:12;;9144:63;9232:2;9223:12;;8961:280;3569:546:16;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:16;;;;;;;;;;;;-1:-1:-1;;;3678:10:16;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:16;;-1:-1:-1;3805:2:16;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:16;-1:-1:-1;3827:34:16;-1:-1:-1;3883:3:16;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:16;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;4044:12:16;;;;;;;;-1:-1:-1;4070:7:16;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:16;3569:546;-1:-1:-1;;;;3569:546:16:o;3747:706:14:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:14;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:14;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:14;;11047:2:21;4351:85:14;;;11029:21:21;11086:2;11066:18;;;11059:30;11125:34;11105:18;;;11098:62;-1:-1:-1;;;11176:18:21;;;11169:40;11226:19;;4351:85:14;10845:406:21;897:1306:16;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;-1:-1:-1;;;;;1088:70:16;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:16:o;3873:223:15:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:15:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:15;;11458:2:21;5149:81:15;;;11440:21:21;11497:2;11477:18;;;11470:30;11536:34;11516:18;;;11509:62;-1:-1:-1;;;11587:18:21;;;11580:36;11633:19;;5149:81:15;11256:402:21;5149:81:15;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:15;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:15:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:15;;;7908:60;;;;-1:-1:-1;;;7908:60:15;;12157:2:21;7908:60:15;;;12139:21:21;12196:2;12176:18;;;12169:30;12235:31;12215:18;;;12208:59;12284:18;;7908:60:15;11955:353:21;7908:60:15;-1:-1:-1;8003:10:15;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:15;;;;;;;;:::i;238:180:21:-;297:6;350:2;338:9;329:7;325:23;321:32;318:52;;;366:1;363;356:12;318:52;-1:-1:-1;389:23:21;;238:180;-1:-1:-1;238:180:21:o;931:422::-;1008:6;1016;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1116:23;;;-1:-1:-1;1186:2:21;1171:18;;1158:32;;-1:-1:-1;1240:2:21;1225:18;;1212:32;-1:-1:-1;;;;;1273:31:21;;1263:42;;1253:70;;1319:1;1316;1309:12;1253:70;1342:5;1332:15;;;931:422;;;;;:::o;2177:118::-;2263:5;2256:13;2249:21;2242:5;2239:32;2229:60;;2285:1;2282;2275:12;2300:309;2365:6;2373;2426:2;2414:9;2405:7;2401:23;2397:32;2394:52;;;2442:1;2439;2432:12;2394:52;2478:9;2465:23;2455:33;;2538:2;2527:9;2523:18;2510:32;2551:28;2573:5;2551:28;:::i;:::-;2598:5;2588:15;;;2300:309;;;;;:::o;2822:184::-;2892:6;2945:2;2933:9;2924:7;2920:23;2916:32;2913:52;;;2961:1;2958;2951:12;2913:52;-1:-1:-1;2984:16:21;;2822:184;-1:-1:-1;2822:184:21:o;3011:250::-;3096:1;3106:113;3120:6;3117:1;3114:13;3106:113;;;3196:11;;;3190:18;3177:11;;;3170:39;3142:2;3135:10;3106:113;;;-1:-1:-1;;3253:1:21;3235:16;;3228:27;3011:250::o;3266:197::-;3307:3;3345:5;3339:12;3360:65;3418:6;3413:3;3406:4;3399:5;3395:16;3360:65;:::i;:::-;3441:16;;;;;3266:197;-1:-1:-1;;3266:197:21:o;3936:1961::-;4885:34;4880:3;4873:47;4950:34;4945:2;4940:3;4936:12;4929:56;-1:-1:-1;;;5010:2:21;5005:3;5001:12;4994:32;4855:3;5055:6;5049:13;5071:73;5137:6;5132:2;5127:3;5123:12;5118:2;5110:6;5106:15;5071:73;:::i;:::-;-1:-1:-1;;;5203:2:21;5163:16;;;5195:11;;;5188:38;5251:13;;5273:74;5251:13;5333:2;5325:11;;5320:2;5308:15;;5273:74;:::i;:::-;-1:-1:-1;;;5407:2:21;5366:17;;;;5399:11;;;5392:40;5457:13;;5479:75;5457:13;5539:3;5531:12;;5526:2;5514:15;;5479:75;:::i;:::-;-1:-1:-1;;;5614:3:21;5573:17;;;;5606:12;;;5599:39;5663:13;;5685:75;5663:13;5745:3;5737:12;;5732:2;5720:15;;5685:75;:::i;:::-;5776:115;5806:84;5831:58;5884:3;5873:8;5869:2;5865:17;5861:27;3545:34;3533:47;;-1:-1:-1;;;3605:2:21;3596:12;;3589:27;3641:2;3632:12;;3468:182;5831:58;5823:6;5806:84;:::i;:::-;3732:34;3720:47;;3797:34;3792:2;3783:12;;3776:56;3862:34;3857:2;3848:12;;3841:56;3922:2;3913:12;;3655:276;5776:115;5769:122;3936:1961;-1:-1:-1;;;;;;;;;3936:1961:21:o;5902:281::-;5954:3;5992:5;5986:12;6019:6;6014:3;6007:19;6035:76;6104:6;6097:4;6092:3;6088:14;6081:4;6074:5;6070:16;6035:76;:::i;:::-;6165:2;6144:15;-1:-1:-1;;6140:29:21;6131:39;;;;6172:4;6127:50;;5902:281;-1:-1:-1;;5902:281:21:o;6188:936::-;6536:4;6565:3;6595:2;6584:9;6577:21;6615:55;6666:2;6655:9;6651:18;6643:6;6615:55;:::i;:::-;-1:-1:-1;;;;;6744:15:21;;;6739:2;6724:18;;6717:43;6796:15;;;6791:2;6776:18;;6769:43;-1:-1:-1;;6848:15:21;;;6843:2;6828:18;;6821:43;6913:18;6901:31;;;;6895:3;6880:19;;6873:60;6970:15;;;;6697:3;6949:19;;6942:44;7017:3;7002:19;;6995:35;;;;7061:3;7046:19;;7039:35;;;;7105:3;7090:19;7083:35;;;;6607:63;6188:936;-1:-1:-1;6188:936:21:o;9246:127::-;9307:10;9302:3;9298:20;9295:1;9288:31;9338:4;9335:1;9328:15;9362:4;9359:1;9352:15;9378:135;9417:3;9438:17;;;9435:43;;9458:18;;:::i;:::-;-1:-1:-1;9505:1:21;9494:13;;9378:135::o;9518:127::-;9579:10;9574:3;9570:20;9567:1;9560:31;9610:4;9607:1;9600:15;9634:4;9631:1;9624:15;9650:217;9690:1;9716;9706:132;;9760:10;9755:3;9751:20;9748:1;9741:31;9795:4;9792:1;9785:15;9823:4;9820:1;9813:15;9706:132;-1:-1:-1;9852:9:21;;9650:217::o;9872:127::-;9933:10;9928:3;9924:20;9921:1;9914:31;9964:4;9961:1;9954:15;9988:4;9985:1;9978:15;10004:128;10071:9;;;10092:11;;;10089:37;;;10106:18;;:::i;:::-;10004:128;;;;:::o;10137:168::-;10177:7;10243:1;10239;10235:6;10231:14;10228:1;10225:21;10220:1;10213:9;10206:17;10202:45;10199:71;;;10250:18;;:::i;:::-;-1:-1:-1;10290:9:21;;10137:168::o;10310:148::-;10398:4;10377:12;;;10391;;;10373:31;;10416:13;;10413:39;;;10432:18;;:::i;10463:127::-;10524:10;10519:3;10515:20;10512:1;10505:31;10555:4;10552:1;10545:15;10579:4;10576:1;10569:15;10595:245;10662:6;10715:2;10703:9;10694:7;10690:23;10686:32;10683:52;;;10731:1;10728;10721:12;10683:52;10763:9;10757:16;10782:28;10804:5;10782:28;:::i;:::-;10829:5;10595:245;-1:-1:-1;;;10595:245:21:o;11663:287::-;11792:3;11830:6;11824:13;11846:66;11905:6;11900:3;11893:4;11885:6;11881:17;11846:66;:::i;:::-;11928:16;;;;;11663:287;-1:-1:-1;;11663:287:21:o;12313:230::-;12462:2;12451:9;12444:21;12425:4;12482:55;12533:2;12522:9;12518:18;12510:6;12482:55;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "25522": [
        {
          "start": 157,
          "length": 32
        },
        {
          "start": 681,
          "length": 32
        },
        {
          "start": 849,
          "length": 32
        },
        {
          "start": 902,
          "length": 32
        },
        {
          "start": 1136,
          "length": 32
        }
      ],
      "25525": [
        {
          "start": 267,
          "length": 32
        },
        {
          "start": 727,
          "length": 32
        },
        {
          "start": 936,
          "length": 32
        },
        {
          "start": 975,
          "length": 32
        },
        {
          "start": 1478,
          "length": 32
        }
      ],
      "25530": [
        {
          "start": 509,
          "length": 32
        },
        {
          "start": 1172,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assertDataFor(bytes32,bytes32,address)": "93ee663b",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "assertionsData(bytes32)": "b33893da",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "getData(bytes32)": "54f6127f",
    "oo()": "8921a614"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_optimisticOracleV3\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAssertionResolved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertDataFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionsData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AIAttestationAsserter.sol\":\"AIAttestationAsserter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uma/=lib/protocol/packages/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0xf8427cb144e47a47625df27e5182bd8f3774becf23d67fd16e51599bd1386bc5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://63d4212d86dfc755e5eead59e05038aaf889be3e9daee9fd9a8070825c7b8b8f\",\"dweb:/ipfs/QmQ87qqtqhSQdfdEjT3wPGSitQ9uPoyYToVu9WTECqYsQP\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871\",\"dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X\"]},\"src/AIAttestationAsserter.sol\":{\"keccak256\":\"0xd340051e40bd85b598d32998ce5b4216d76d8c1a288c07af1b36236c19f0e7a5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0c6edf9532374fb493383f3b7c0c4c5a9ee8d34a6293f34eaef76ac65f0c69d4\",\"dweb:/ipfs/QmSTDozKix7NSpuFWGjmxHDBVB537sYRwk2rkTAuyvPFMe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_optimisticOracleV3",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAsserted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAssertionResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertDataFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionsData",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "resolved",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uma/=lib/protocol/packages/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":protocol/=lib/protocol/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/AIAttestationAsserter.sol": "AIAttestationAsserter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0xf8427cb144e47a47625df27e5182bd8f3774becf23d67fd16e51599bd1386bc5",
        "urls": [
          "bzz-raw://63d4212d86dfc755e5eead59e05038aaf889be3e9daee9fd9a8070825c7b8b8f",
          "dweb:/ipfs/QmQ87qqtqhSQdfdEjT3wPGSitQ9uPoyYToVu9WTECqYsQP"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00",
        "urls": [
          "bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871",
          "dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/AIAttestationAsserter.sol": {
        "keccak256": "0xd340051e40bd85b598d32998ce5b4216d76d8c1a288c07af1b36236c19f0e7a5",
        "urls": [
          "bzz-raw://0c6edf9532374fb493383f3b7c0c4c5a9ee8d34a6293f34eaef76ac65f0c69d4",
          "dweb:/ipfs/QmSTDozKix7NSpuFWGjmxHDBVB537sYRwk2rkTAuyvPFMe"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/AIAttestationAsserter.sol",
    "id": 25806,
    "exportedSymbols": {
      "AIAttestationAsserter": [
        25805
      ],
      "Address": [
        24845
      ],
      "ClaimData": [
        25253
      ],
      "IERC20": [
        24198
      ],
      "IERC20Permit": [
        24234
      ],
      "OptimisticOracleV3Interface": [
        25447
      ],
      "SafeERC20": [
        24515
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:5863:20",
    "nodes": [
      {
        "id": 25512,
        "nodeType": "PragmaDirective",
        "src": "42:23:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 25513,
        "nodeType": "ImportDirective",
        "src": "67:79:20",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25806,
        "sourceUnit": 25258,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25514,
        "nodeType": "ImportDirective",
        "src": "147:93:20",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25806,
        "sourceUnit": 25448,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25515,
        "nodeType": "ImportDirective",
        "src": "241:65:20",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25806,
        "sourceUnit": 24516,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25805,
        "nodeType": "ContractDefinition",
        "src": "709:5195:20",
        "nodes": [
          {
            "id": 25519,
            "nodeType": "UsingForDirective",
            "src": "746:27:20",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 25516,
              "name": "SafeERC20",
              "nameLocations": [
                "752:9:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24515,
              "src": "752:9:20"
            },
            "typeName": {
              "id": 25518,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25517,
                "name": "IERC20",
                "nameLocations": [
                  "766:6:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24198,
                "src": "766:6:20"
              },
              "referencedDeclaration": 24198,
              "src": "766:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$24198",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 25522,
            "nodeType": "VariableDeclaration",
            "src": "778:39:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "20402e1d",
            "mutability": "immutable",
            "name": "defaultCurrency",
            "nameLocation": "802:15:20",
            "scope": 25805,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$24198",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 25521,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25520,
                "name": "IERC20",
                "nameLocations": [
                  "778:6:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24198,
                "src": "778:6:20"
              },
              "referencedDeclaration": 24198,
              "src": "778:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$24198",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25525,
            "nodeType": "VariableDeclaration",
            "src": "823:47:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "8921a614",
            "mutability": "immutable",
            "name": "oo",
            "nameLocation": "868:2:20",
            "scope": 25805,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 25524,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25523,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "823:27:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25447,
                "src": "823:27:20"
              },
              "referencedDeclaration": 25447,
              "src": "823:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25528,
            "nodeType": "VariableDeclaration",
            "src": "876:47:20",
            "nodes": [],
            "constant": true,
            "functionSelector": "b75d4e24",
            "mutability": "constant",
            "name": "assertionLiveness",
            "nameLocation": "899:17:20",
            "scope": 25805,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 25526,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "876:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "37323030",
              "id": 25527,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "919:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7200_by_1",
                "typeString": "int_const 7200"
              },
              "value": "7200"
            },
            "visibility": "public"
          },
          {
            "id": 25530,
            "nodeType": "VariableDeclaration",
            "src": "929:42:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "d509b017",
            "mutability": "immutable",
            "name": "defaultIdentifier",
            "nameLocation": "954:17:20",
            "scope": 25805,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 25529,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "929:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25539,
            "nodeType": "StructDefinition",
            "src": "978:281:20",
            "nodes": [],
            "canonicalName": "AIAttestationAsserter.DataAssertion",
            "members": [
              {
                "constant": false,
                "id": 25532,
                "mutability": "mutable",
                "name": "dataId",
                "nameLocation": "1017:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 25539,
                "src": "1009:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 25531,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25534,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1074:4:20",
                "nodeType": "VariableDeclaration",
                "scope": 25539,
                "src": "1066:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 25533,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1066:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25536,
                "mutability": "mutable",
                "name": "asserter",
                "nameLocation": "1137:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 25539,
                "src": "1129:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25535,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1129:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25538,
                "mutability": "mutable",
                "name": "resolved",
                "nameLocation": "1200:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 25539,
                "src": "1195:13:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25537,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1195:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DataAssertion",
            "nameLocation": "985:13:20",
            "scope": 25805,
            "visibility": "public"
          },
          {
            "id": 25544,
            "nodeType": "VariableDeclaration",
            "src": "1265:55:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "b33893da",
            "mutability": "mutable",
            "name": "assertionsData",
            "nameLocation": "1306:14:20",
            "scope": 25805,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
              "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion)"
            },
            "typeName": {
              "id": 25543,
              "keyType": {
                "id": 25540,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1273:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1265:33:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
                "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion)"
              },
              "valueType": {
                "id": 25542,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25541,
                  "name": "DataAssertion",
                  "nameLocations": [
                    "1284:13:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25539,
                  "src": "1284:13:20"
                },
                "referencedDeclaration": 25539,
                "src": "1284:13:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DataAssertion_$25539_storage_ptr",
                  "typeString": "struct AIAttestationAsserter.DataAssertion"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25554,
            "nodeType": "EventDefinition",
            "src": "1327:150:20",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec",
            "name": "DataAsserted",
            "nameLocation": "1333:12:20",
            "parameters": {
              "id": 25553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25546,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "1371:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25554,
                  "src": "1355:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25545,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25548,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1395:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25554,
                  "src": "1387:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25547,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25550,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "1425:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25554,
                  "src": "1409:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25552,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1459:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25554,
                  "src": "1443:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25551,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1345:131:20"
            }
          },
          {
            "id": 25564,
            "nodeType": "EventDefinition",
            "src": "1483:159:20",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e49ab75dd8ad20084c43aacc9218434d61af074f44263f887212c41ad2d41c9d",
            "name": "DataAssertionResolved",
            "nameLocation": "1489:21:20",
            "parameters": {
              "id": 25563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25556,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "1536:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25564,
                  "src": "1520:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25555,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25558,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1560:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25564,
                  "src": "1552:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25557,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1552:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25560,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "1590:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25564,
                  "src": "1574:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25562,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1624:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25564,
                  "src": "1608:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25561,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1510:131:20"
            }
          },
          {
            "id": 25590,
            "nodeType": "FunctionDefinition",
            "src": "1648:241:20",
            "nodes": [],
            "body": {
              "id": 25589,
              "nodeType": "Block",
              "src": "1715:174:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25571,
                      "name": "defaultCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25522,
                      "src": "1725:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$24198",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25573,
                          "name": "_defaultCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25566,
                          "src": "1750:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25572,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24198,
                        "src": "1743:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$24198_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 25574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1743:24:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$24198",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1725:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24198",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 25576,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:42:20"
                },
                {
                  "expression": {
                    "id": 25581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25577,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25525,
                      "src": "1777:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25579,
                          "name": "_optimisticOracleV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25568,
                          "src": "1810:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25578,
                        "name": "OptimisticOracleV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25447,
                        "src": "1782:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$25447_$",
                          "typeString": "type(contract OptimisticOracleV3Interface)"
                        }
                      },
                      "id": 25580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1782:48:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "src": "1777:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                      "typeString": "contract OptimisticOracleV3Interface"
                    }
                  },
                  "id": 25582,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:53:20"
                },
                {
                  "expression": {
                    "id": 25587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25583,
                      "name": "defaultIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25530,
                      "src": "1840:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25584,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25525,
                          "src": "1860:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 25585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1863:17:20",
                        "memberName": "defaultIdentifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25310,
                        "src": "1860:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 25586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1860:22:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1840:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25588,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:42:20"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25566,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "1668:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25590,
                  "src": "1660:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25568,
                  "mutability": "mutable",
                  "name": "_optimisticOracleV3",
                  "nameLocation": "1694:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25590,
                  "src": "1686:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1659:55:20"
            },
            "returnParameters": {
              "id": 25570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1715:0:20"
            },
            "scope": 25805,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25617,
            "nodeType": "FunctionDefinition",
            "src": "2008:208:20",
            "nodes": [],
            "body": {
              "id": 25616,
              "nodeType": "Block",
              "src": "2082:134:20",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 25603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2096:37:20",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 25599,
                          "name": "assertionsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25544,
                          "src": "2097:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
                            "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion storage ref)"
                          }
                        },
                        "id": 25601,
                        "indexExpression": {
                          "id": 25600,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25592,
                          "src": "2112:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2097:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataAssertion_$25539_storage",
                          "typeString": "struct AIAttestationAsserter.DataAssertion storage ref"
                        }
                      },
                      "id": 25602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2125:8:20",
                      "memberName": "resolved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25538,
                      "src": "2097:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25608,
                  "nodeType": "IfStatement",
                  "src": "2092:60:20",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 25604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2143:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 25605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2150:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 25606,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2142:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 25598,
                    "id": 25607,
                    "nodeType": "Return",
                    "src": "2135:17:20"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 25609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2170:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 25610,
                            "name": "assertionsData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25544,
                            "src": "2176:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
                              "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion storage ref)"
                            }
                          },
                          "id": 25612,
                          "indexExpression": {
                            "id": 25611,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25592,
                            "src": "2191:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2176:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataAssertion_$25539_storage",
                            "typeString": "struct AIAttestationAsserter.DataAssertion storage ref"
                          }
                        },
                        "id": 25613,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2204:4:20",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25534,
                        "src": "2176:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 25614,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2169:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
                  "functionReturnParameters": 25598,
                  "id": 25615,
                  "nodeType": "Return",
                  "src": "2162:47:20"
                }
              ]
            },
            "functionSelector": "54f6127f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nameLocation": "2017:7:20",
            "parameters": {
              "id": 25593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25592,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2033:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25617,
                  "src": "2025:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25591,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2024:21:20"
            },
            "returnParameters": {
              "id": 25598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25617,
                  "src": "2067:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25594,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25617,
                  "src": "2073:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25596,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2066:15:20"
            },
            "scope": 25805,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25748,
            "nodeType": "FunctionDefinition",
            "src": "2603:2259:20",
            "nodes": [],
            "body": {
              "id": 25747,
              "nodeType": "Block",
              "src": "2741:2121:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25628,
                      "name": "asserter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25623,
                      "src": "2751:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25629,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25623,
                          "src": "2762:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2782:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2774:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25630,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2774:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2774:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2762:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 25637,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25623,
                        "src": "2800:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 25638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2762:46:20",
                      "trueExpression": {
                        "expression": {
                          "id": 25635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2787:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2791:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2787:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2751:57:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25640,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:57:20"
                },
                {
                  "assignments": [
                    25642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25642,
                      "mutability": "mutable",
                      "name": "bond",
                      "nameLocation": "2826:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25747,
                      "src": "2818:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25641,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2818:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25650,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25647,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25522,
                            "src": "2859:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24198",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$24198",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 25646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2851:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25645,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2851:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2851:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25643,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25525,
                        "src": "2833:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 25644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2836:14:20",
                      "memberName": "getMinimumBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25392,
                      "src": "2833:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2818:58:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25654,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2925:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2929:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2925:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 25658,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2945:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AIAttestationAsserter_$25805",
                              "typeString": "contract AIAttestationAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AIAttestationAsserter_$25805",
                              "typeString": "contract AIAttestationAsserter"
                            }
                          ],
                          "id": 25657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2937:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25656,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2937:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2937:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25660,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25642,
                        "src": "2952:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25651,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25522,
                        "src": "2892:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24198",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2908:16:20",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24292,
                      "src": "2892:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24198_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$24198_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 25661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:65:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25662,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25668,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25525,
                            "src": "3003:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          ],
                          "id": 25667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2995:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2995:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:11:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25670,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25642,
                        "src": "3008:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25663,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25522,
                        "src": "2967:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24198",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2983:11:20",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24336,
                      "src": "2967:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24198_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$24198_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 25671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2967:46:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25672,
                  "nodeType": "ExpressionStatement",
                  "src": "2967:46:20"
                },
                {
                  "expression": {
                    "id": 25727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25673,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25626,
                      "src": "3614:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "54686520666f6c6c6f77696e672043494420636f6e7461696e7320612073746174656d656e742074686174207761732061637475616c6c792067656e657261746564206279204149",
                              "id": 25678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3690:74:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4b462dc04bbd57cc0eca29ccf6a37296ca3a7dec59a2ab41b9e0e148ef3c9d69",
                                "typeString": "literal_string \"The following CID contains a statement that was actually generated by AI\""
                              },
                              "value": "The following CID contains a statement that was actually generated by AI"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 25681,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25621,
                                  "src": "3872:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 25679,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25253,
                                  "src": "3850:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$25253_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 25680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3860:11:20",
                                "memberName": "toUtf8Bytes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25009,
                                "src": "3850:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes32) pure returns (bytes memory)"
                                }
                              },
                              "id": 25682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3850:27:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20666f72206461746149643a203078",
                              "id": 25683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3895:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_638fd457175c192537aad87792f9f955f696ff6a04cd4ef012ec52d324a42afc",
                                "typeString": "literal_string \" for dataId: 0x\""
                              },
                              "value": " for dataId: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 25686,
                                  "name": "dataId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25619,
                                  "src": "3952:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 25684,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25253,
                                  "src": "3930:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$25253_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 25685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3940:11:20",
                                "memberName": "toUtf8Bytes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25009,
                                "src": "3930:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes32) pure returns (bytes memory)"
                                }
                              },
                              "id": 25687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3930:29:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20616e642061737365727465723a203078",
                              "id": 25688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3977:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c77a658518de669f0fa22457f32e31788885c7b0e4a4f4dc1fa539e8ef29dedf",
                                "typeString": "literal_string \" and asserter: 0x\""
                              },
                              "value": " and asserter: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 25691,
                                  "name": "asserter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25623,
                                  "src": "4043:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 25689,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25253,
                                  "src": "4014:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$25253_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 25690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4024:18:20",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25042,
                                "src": "4014:28:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 25692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4014:38:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2061742074696d657374616d703a20",
                              "id": 25693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4070:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              "value": " at timestamp: "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 25696,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4131:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 25697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4137:9:20",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4131:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 25694,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25253,
                                  "src": "4105:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$25253_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 25695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4115:15:20",
                                "memberName": "toUtf8BytesUint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25135,
                                "src": "4105:25:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes memory)"
                                }
                              },
                              "id": 25698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4105:42:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20696e207468652044617461417373657274657220636f6e7472616374206174203078",
                              "id": 25699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4165:37:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              "value": " in the DataAsserter contract at 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 25704,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4257:4:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AIAttestationAsserter_$25805",
                                        "typeString": "contract AIAttestationAsserter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_AIAttestationAsserter_$25805",
                                        "typeString": "contract AIAttestationAsserter"
                                      }
                                    ],
                                    "id": 25703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4249:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 25702,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4249:7:20",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 25705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4249:13:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 25700,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25253,
                                  "src": "4220:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$25253_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 25701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4230:18:20",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25042,
                                "src": "4220:28:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 25706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4220:43:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2069732076616c69642e20496e737472756374696f6e732061743a2068747470733a2f2f6769746875622e636f6d2f6a6f7264616e2d7075626c69632f6f7074696d69737469632d61692d6174746573746174696f6e2f747265652f6d61696e",
                              "id": 25707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4281:98:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54e997b6636b431e1150de124b5155a92c6f7dbbb45e7355e4d75f631fd2d825",
                                "typeString": "literal_string \" is valid. Instructions at: https://github.com/jordan-public/optimistic-ai-attestation/tree/main\""
                              },
                              "value": " is valid. Instructions at: https://github.com/jordan-public/optimistic-ai-attestation/tree/main"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4b462dc04bbd57cc0eca29ccf6a37296ca3a7dec59a2ab41b9e0e148ef3c9d69",
                                "typeString": "literal_string \"The following CID contains a statement that was actually generated by AI\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_638fd457175c192537aad87792f9f955f696ff6a04cd4ef012ec52d324a42afc",
                                "typeString": "literal_string \" for dataId: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c77a658518de669f0fa22457f32e31788885c7b0e4a4f4dc1fa539e8ef29dedf",
                                "typeString": "literal_string \" and asserter: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_54e997b6636b431e1150de124b5155a92c6f7dbbb45e7355e4d75f631fd2d825",
                                "typeString": "literal_string \" is valid. Instructions at: https://github.com/jordan-public/optimistic-ai-attestation/tree/main\""
                              }
                            ],
                            "expression": {
                              "id": 25676,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3656:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 25677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3660:12:20",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3656:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 25708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3656:737:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 25709,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25623,
                          "src": "4407:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 25712,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4437:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AIAttestationAsserter_$25805",
                                "typeString": "contract AIAttestationAsserter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AIAttestationAsserter_$25805",
                                "typeString": "contract AIAttestationAsserter"
                              }
                            ],
                            "id": 25711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4429:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25710,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4429:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4429:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4464:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4456:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25714,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4456:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4456:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 25718,
                          "name": "assertionLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25528,
                          "src": "4506:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 25719,
                          "name": "defaultCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25522,
                          "src": "4537:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$24198",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 25720,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25642,
                          "src": "4566:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 25721,
                          "name": "defaultIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25530,
                          "src": "4584:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4623:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4615:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 25722,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4615:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4615:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$24198",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25674,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25525,
                          "src": "3628:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 25675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3631:11:20",
                        "memberName": "assertTruth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25354,
                        "src": "3628:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$24198_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) external returns (bytes32)"
                        }
                      },
                      "id": 25726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3628:1021:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3614:1035:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25728,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:1035:20"
                },
                {
                  "expression": {
                    "id": 25738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25729,
                        "name": "assertionsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25544,
                        "src": "4659:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
                          "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion storage ref)"
                        }
                      },
                      "id": 25731,
                      "indexExpression": {
                        "id": 25730,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25626,
                        "src": "4674:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4659:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DataAssertion_$25539_storage",
                        "typeString": "struct AIAttestationAsserter.DataAssertion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25733,
                          "name": "dataId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25619,
                          "src": "4716:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 25734,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25621,
                          "src": "4736:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 25735,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25623,
                          "src": "4754:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 25736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4776:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 25732,
                        "name": "DataAssertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25539,
                        "src": "4689:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DataAssertion_$25539_storage_ptr_$",
                          "typeString": "type(struct AIAttestationAsserter.DataAssertion storage pointer)"
                        }
                      },
                      "id": 25737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4689:102:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DataAssertion_$25539_memory_ptr",
                        "typeString": "struct AIAttestationAsserter.DataAssertion memory"
                      }
                    },
                    "src": "4659:132:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DataAssertion_$25539_storage",
                      "typeString": "struct AIAttestationAsserter.DataAssertion storage ref"
                    }
                  },
                  "id": 25739,
                  "nodeType": "ExpressionStatement",
                  "src": "4659:132:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25741,
                        "name": "dataId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25619,
                        "src": "4819:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 25742,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25621,
                        "src": "4827:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 25743,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25623,
                        "src": "4833:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25744,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25626,
                        "src": "4843:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 25740,
                      "name": "DataAsserted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25554,
                      "src": "4806:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address,bytes32)"
                      }
                    },
                    "id": 25745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4806:49:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25746,
                  "nodeType": "EmitStatement",
                  "src": "4801:54:20"
                }
              ]
            },
            "functionSelector": "93ee663b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertDataFor",
            "nameLocation": "2612:13:20",
            "parameters": {
              "id": 25624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25619,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "2643:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25748,
                  "src": "2635:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25618,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2635:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25621,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2667:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25748,
                  "src": "2659:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25620,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25623,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "2689:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25748,
                  "src": "2681:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2625:78:20"
            },
            "returnParameters": {
              "id": 25627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25626,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2728:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25748,
                  "src": "2720:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25625,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:21:20"
            },
            "scope": 25805,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25798,
            "nodeType": "FunctionDefinition",
            "src": "4912:728:20",
            "nodes": [],
            "body": {
              "id": 25797,
              "nodeType": "Block",
              "src": "5022:618:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25756,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5040:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5044:6:20",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5040:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 25760,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25525,
                              "src": "5062:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$25447",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            ],
                            "id": 25759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5054:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25758,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5054:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5054:11:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5040:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5032:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25764,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:34:20"
                },
                {
                  "condition": {
                    "id": 25765,
                    "name": "assertedTruthfully",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25752,
                    "src": "5155:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 25794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "delete",
                      "prefix": true,
                      "src": "5599:34:20",
                      "subExpression": {
                        "baseExpression": {
                          "id": 25791,
                          "name": "assertionsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25544,
                          "src": "5606:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
                            "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion storage ref)"
                          }
                        },
                        "id": 25793,
                        "indexExpression": {
                          "id": 25792,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25750,
                          "src": "5621:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "5606:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataAssertion_$25539_storage",
                          "typeString": "struct AIAttestationAsserter.DataAssertion storage ref"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 25795,
                    "nodeType": "ExpressionStatement",
                    "src": "5599:34:20"
                  },
                  "id": 25796,
                  "nodeType": "IfStatement",
                  "src": "5151:482:20",
                  "trueBody": {
                    "id": 25790,
                    "nodeType": "Block",
                    "src": "5175:418:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 25771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 25766,
                                "name": "assertionsData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25544,
                                "src": "5189:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
                                  "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion storage ref)"
                                }
                              },
                              "id": 25768,
                              "indexExpression": {
                                "id": 25767,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25750,
                                "src": "5204:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5189:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataAssertion_$25539_storage",
                                "typeString": "struct AIAttestationAsserter.DataAssertion storage ref"
                              }
                            },
                            "id": 25769,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5217:8:20",
                            "memberName": "resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25538,
                            "src": "5189:36:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 25770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5228:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5189:43:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25772,
                        "nodeType": "ExpressionStatement",
                        "src": "5189:43:20"
                      },
                      {
                        "assignments": [
                          25775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 25775,
                            "mutability": "mutable",
                            "name": "dataAssertion",
                            "nameLocation": "5267:13:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 25790,
                            "src": "5246:34:20",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DataAssertion_$25539_memory_ptr",
                              "typeString": "struct AIAttestationAsserter.DataAssertion"
                            },
                            "typeName": {
                              "id": 25774,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 25773,
                                "name": "DataAssertion",
                                "nameLocations": [
                                  "5246:13:20"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25539,
                                "src": "5246:13:20"
                              },
                              "referencedDeclaration": 25539,
                              "src": "5246:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataAssertion_$25539_storage_ptr",
                                "typeString": "struct AIAttestationAsserter.DataAssertion"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 25779,
                        "initialValue": {
                          "baseExpression": {
                            "id": 25776,
                            "name": "assertionsData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25544,
                            "src": "5283:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$25539_storage_$",
                              "typeString": "mapping(bytes32 => struct AIAttestationAsserter.DataAssertion storage ref)"
                            }
                          },
                          "id": 25778,
                          "indexExpression": {
                            "id": 25777,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25750,
                            "src": "5298:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5283:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataAssertion_$25539_storage",
                            "typeString": "struct AIAttestationAsserter.DataAssertion storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5246:64:20"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 25781,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25775,
                                "src": "5368:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$25539_memory_ptr",
                                  "typeString": "struct AIAttestationAsserter.DataAssertion memory"
                                }
                              },
                              "id": 25782,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5382:6:20",
                              "memberName": "dataId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25532,
                              "src": "5368:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 25783,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25775,
                                "src": "5406:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$25539_memory_ptr",
                                  "typeString": "struct AIAttestationAsserter.DataAssertion memory"
                                }
                              },
                              "id": 25784,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5420:4:20",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25534,
                              "src": "5406:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 25785,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25775,
                                "src": "5442:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$25539_memory_ptr",
                                  "typeString": "struct AIAttestationAsserter.DataAssertion memory"
                                }
                              },
                              "id": 25786,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5456:8:20",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25536,
                              "src": "5442:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25787,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25750,
                              "src": "5482:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 25780,
                            "name": "DataAssertionResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25564,
                            "src": "5329:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,address,bytes32)"
                            }
                          },
                          "id": 25788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5329:178:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25789,
                        "nodeType": "EmitStatement",
                        "src": "5324:183:20"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f1b156b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionResolvedCallback",
            "nameLocation": "4921:25:20",
            "parameters": {
              "id": 25753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25750,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "4964:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25798,
                  "src": "4956:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25749,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4956:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25752,
                  "mutability": "mutable",
                  "name": "assertedTruthfully",
                  "nameLocation": "4990:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25798,
                  "src": "4985:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4985:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4946:68:20"
            },
            "returnParameters": {
              "id": 25754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5022:0:20"
            },
            "scope": 25805,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25804,
            "nodeType": "FunctionDefinition",
            "src": "5837:65:20",
            "nodes": [],
            "body": {
              "id": 25803,
              "nodeType": "Block",
              "src": "5900:2:20",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "d448a4ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionDisputedCallback",
            "nameLocation": "5846:25:20",
            "parameters": {
              "id": 25801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25800,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "5880:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25804,
                  "src": "5872:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25799,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5872:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5871:21:20"
            },
            "returnParameters": {
              "id": 25802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5900:0:20"
            },
            "scope": 25805,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AIAttestationAsserter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25805
        ],
        "name": "AIAttestationAsserter",
        "nameLocation": "718:21:20",
        "scope": 25806,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 20
}