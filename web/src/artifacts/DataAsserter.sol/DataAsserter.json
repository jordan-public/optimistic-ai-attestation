{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_optimisticOracleV3",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "DataAsserted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "DataAssertionResolved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        }
      ],
      "name": "assertDataFor",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "assertionDisputedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assertionLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "assertedTruthfully",
          "type": "bool"
        }
      ],
      "name": "assertionResolvedCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertionsData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "dataId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "resolved",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oo",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "709:5039:7:-:0;;;1639:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1716:42:7;;;;;1768:53;;;;;;1851:22;;;-1:-1:-1;;;1851:22:7;;;;:20;;:22;;;;;;;;;;;;;;;1768:53;1851:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1831:42;;-1:-1:-1;709:5039:7;;-1:-1:-1;709:5039:7;14:177:8;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:184::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;-1:-1:-1;656:16:8;;494:184;-1:-1:-1;494:184:8:o;:::-;709:5039:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063b33893da11610066578063b33893da1461014e578063b75d4e24146101c3578063d448a4ec146101e5578063d509b017146101f8578063f1b156b21461021f57600080fd5b806320402e1d1461009857806354f6127f146100dc5780638921a6141461010657806393ee663b1461012d575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ef6100ea366004610e15565b610232565b6040805192151583526020830191909152016100d3565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b61014061013b366004610e2e565b610279565b6040519081526020016100d3565b61019261015c366004610e15565b6000602081905290815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b6040516100d3949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6101cc611c2081565b60405167ffffffffffffffff90911681526020016100d3565b6101f66101f3366004610e15565b50565b005b6101407f000000000000000000000000000000000000000000000000000000000000000081565b6101f661022d366004610e81565b6105bb565b6000818152602081905260408120600201548190600160a01b900460ff1661025f57506000928392509050565b505060009081526020819052604090206001908101549091565b60006001600160a01b038216156102905781610292565b335b604051634360af3d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529193506000917f00000000000000000000000000000000000000000000000000000000000000001690634360af3d90602401602060405180830381865afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610eb1565b90506103796001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846106c6565b6103cd6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610737565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636457c97961040586610856565b61040e88610856565b61041787610897565b610420426108ee565b61042930610897565b60405160200161043d959493929190610f0a565b60408051601f19818403018152908290526001600160e01b031960e084901b1682526104be9187903090600090611c20907f0000000000000000000000000000000000000000000000000000000000000000908a907f000000000000000000000000000000000000000000000000000000000000000090859060040161105f565b6020604051808303816000875af11580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190610eb1565b6040805160808101825287815260208082018881526001600160a01b0380891684860181815260006060870181815289825295819052879020955186559251600186015591516002909401805493511515600160a01b026001600160a81b03199094169490911693909317919091179091559051919350839187907f29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec906105ab9089815260200190565b60405180910390a4509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105f057600080fd5b8015610699576000828152602081815260409182902060028101805460ff60a01b198116600160a01b9081179283905585516080810187528454808252600195909501549581018690526001600160a01b03909216828701819052920460ff1615156060820152935186939192917fe49ab75dd8ad20084c43aacc9218434d61af074f44263f887212c41ad2d41c9d9161068c91815260200190565b60405180910390a4505050565b506000908152602081905260408120818155600181019190915560020180546001600160a81b0319169055565b6040516001600160a01b03808516602483015283166044820152606481018290526107319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a1a565b50505050565b8015806107b15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af9190610eb1565b155b6108215760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b03831660248201526044810182905261085190849063095ea7b360e01b906064016106fa565b505050565b6060610865608083901c610aec565b61086e83610aec565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606108af6001600160801b03602084901c16610aec565b6108ca8360601b6bffffffffffffffffffffffff1916610aec565b6040516020016108819291909182526001600160c01b031916602082015260280190565b6060816000036109155750506040805180820190915260018152600360fc1b602082015290565b8160005b811561093f5780610929816110e3565b91506109389050600a83611112565b9150610919565b60008167ffffffffffffffff81111561095a5761095a611134565b6040519080825280601f01601f191660200182016040528015610984576020820181803683370190505b509050815b8515610a115761099a60018261114a565b905060006109a9600a88611112565b6109b490600a611163565b6109be908861114a565b6109c9906030611182565b905060008160f81b9050808484815181106109e6576109e661119b565b60200101906001600160f81b031916908160001a905350610a08600a89611112565b97505050610989565b50949350505050565b6000610a6f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c859092919063ffffffff16565b8051909150156108515780806020019051810190610a8d91906111b1565b6108515760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610818565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681610c0757610c076110fc565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b6060610c948484600085610c9c565b949350505050565b606082471015610cfd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610818565b600080866001600160a01b03168587604051610d1991906111d5565b60006040518083038185875af1925050503d8060008114610d56576040519150601f19603f3d011682016040523d82523d6000602084013e610d5b565b606091505b5091509150610d6c87838387610d77565b979650505050505050565b60608315610de6578251600003610ddf576001600160a01b0385163b610ddf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610818565b5081610c94565b610c948383815115610dfb5781518083602001fd5b8060405162461bcd60e51b815260040161081891906111f1565b600060208284031215610e2757600080fd5b5035919050565b600080600060608486031215610e4357600080fd5b833592506020840135915060408401356001600160a01b0381168114610e6857600080fd5b809150509250925092565b80151581146101f357600080fd5b60008060408385031215610e9457600080fd5b823591506020830135610ea681610e73565b809150509250929050565b600060208284031215610ec357600080fd5b5051919050565b60005b83811015610ee5578181015183820152602001610ecd565b50506000910152565b60008151610f00818560208601610eca565b9290920192915050565b70088c2e8c240c2e6e6cae4e8cac8744060f607b1b8152600086516020610f378260118601838c01610eca565b6e040ccdee440c8c2e8c292c8744060f608b1b6011928501928301528751610f6481838501848c01610eca565b70040c2dcc840c2e6e6cae4e8cae4744060f607b1b9201818101929092528651610f9481603185018a8501610eca565b6011818401019250506e01030ba103a34b6b2b9ba30b6b81d1608d1b818301528551610fc681602f8501848a01610eca565b600f818401019250507f20696e207468652044617461417373657274657220636f6e747261637420617481830152506204060f60eb1b60408201526110276110116043830186610eee565b691034b9903b30b634b21760b11b8152600a0190565b98975050505050505050565b6000815180845261104b816020860160208601610eca565b601f01601f19169290920160200192915050565b60006101208083526110738184018d611033565b6001600160a01b039b8c166020850152998b1660408401525050958816606087015267ffffffffffffffff9490941660808601529190951660a084015260c083019490945260e08201939093526101000191909152919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016110f5576110f56110cd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261112f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b8181038181111561115d5761115d6110cd565b92915050565b600081600019048311821515161561117d5761117d6110cd565b500290565b60ff818116838216019081111561115d5761115d6110cd565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111c357600080fd5b81516111ce81610e73565b9392505050565b600082516111e7818460208701610eca565b9190910192915050565b6020815260006111ce602083018461103356fea26469706673582212202540ed57dfa9e615d04d7276f0aad808093151bddc6f76f59cc7c11d5a1c2ff664736f6c63430008100033",
    "sourceMap": "709:5039:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:39;;;;;;;;-1:-1:-1;;;;;191:32:8;;;173:51;;161:2;146:18;769:39:7;;;;;;;;1999:208;;;;;;:::i;:::-;;:::i;:::-;;;;613:14:8;;606:22;588:41;;660:2;645:18;;638:34;;;;561:18;1999:208:7;420:258:8;814:47:7;;;;;2594:2112;;;;;;:::i;:::-;;:::i;:::-;;;1500:25:8;;;1488:2;1473:18;2594:2112:7;1354:177:8;1256:55:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1256:55:7;;;-1:-1:-1;;;1256:55:7;;;;;;;;;;;;;;;1761:25:8;;;1817:2;1802:18;;1795:34;;;;-1:-1:-1;;;;;1865:32:8;1860:2;1845:18;;1838:60;1941:14;1934:22;1929:2;1914:18;;1907:50;1748:3;1733:19;;1536:427;867:47:7;;910:4;867:47;;;;;2142:18:8;2130:31;;;2112:50;;2100:2;2085:18;867:47:7;1968:200:8;5681:65:7;;;;;;:::i;:::-;;;;;920:42;;;;;4756:728;;;;;;:::i;:::-;;:::i;1999:208::-;2058:4;2088:27;;;;;;;;;;:36;;;2058:4;;-1:-1:-1;;;2088:36:7;;;;2083:60;;-1:-1:-1;2134:5:7;;;;-1:-1:-1;1999:208:7;-1:-1:-1;1999:208:7:o;2083:60::-;-1:-1:-1;;2167:14:7;:27;;;;;;;;;;2161:4;2167:32;;;;2161:4;;1999:208::o;2594:2112::-;2711:19;-1:-1:-1;;;;;2753:22:7;;;:46;;2791:8;2753:46;;;2778:10;2753:46;2824:43;;-1:-1:-1;;;2824:43:7;;-1:-1:-1;;;;;2850:15:7;191:32:8;;2824:43:7;;;173:51:8;2742:57:7;;-1:-1:-1;;;2824:2:7;:17;;;;146:18:8;;2824:43:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2809:58;-1:-1:-1;2877:65:7;-1:-1:-1;;;;;2877:15:7;:32;2910:10;2930:4;2809:58;2877:32;:65::i;:::-;2952:46;-1:-1:-1;;;;;2952:15:7;:27;2988:2;2993:4;2952:27;:46::i;:::-;3613:2;-1:-1:-1;;;;;3613:14:7;;3780:27;3802:4;3780:21;:27::i;:::-;3860:29;3882:6;3860:21;:29::i;:::-;3944:38;3973:8;3944:28;:38::i;:::-;4035:42;4061:15;4035:25;:42::i;:::-;4150:43;4187:4;4150:28;:43::i;:::-;3641:596;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3641:596:7;;;;;;;;;;-1:-1:-1;;;;;;3613:880:7;;;;;;;;;4251:8;;4281:4;;4308:1;;910:4;;4381:15;;4410:4;;4428:17;;4308:1;;3613:880;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4533:102;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4533:102:7;;;;;;;;;-1:-1:-1;4533:102:7;;;;;;4503:27;;;;;;;;;;:132;;;;;;4533:102;4503:132;;;;;;;;;;;;;;;-1:-1:-1;;;4503:132:7;-1:-1:-1;;;;;;4503:132:7;;;;;;;;;;;;;;;;;;4650:49;;3599:894;;-1:-1:-1;3599:894:7;;4560:6;;4650:49;;;;4580:4;1500:25:8;;1488:2;1473:18;;1354:177;4650:49:7;;;;;;;;2732:1974;2594:2112;;;;;:::o;4756:728::-;4884:10;-1:-1:-1;;;;;4906:2:7;4884:25;;4876:34;;;;;;4999:18;4995:482;;;5033:14;:27;;;;;;;;;;;;:36;;;:43;;-1:-1:-1;;;;5033:43:7;;-1:-1:-1;;;5033:43:7;;;;;;;5090:64;;;;;;;;;;;;5072:4;5090:64;;;;;;;;;;;-1:-1:-1;;;;;5090:64:7;;;;;;;;;;;5033:43;5090:64;;;;;;;5173:178;;5048:11;;5090:64;;;5173:178;;;;1500:25:8;;1488:2;1473:18;;1354:177;5173:178:7;;;;;;;;5019:418;4756:728;;:::o;4995:482::-;-1:-1:-1;5450:14:7;:27;;;;;;;;;;5443:34;;;;;;;;;;;;;;-1:-1:-1;;;;;;5443:34:7;;;4756:728::o;974:241:2:-;1139:68;;-1:-1:-1;;;;;7235:15:8;;;1139:68:2;;;7217:34:8;7287:15;;7267:18;;;7260:43;7319:18;;;7312:34;;;1112:96:2;;1132:5;;-1:-1:-1;;;1162:27:2;7152:18:8;;1139:68:2;;;;-1:-1:-1;;1139:68:2;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:2;-1:-1:-1;;;;;;1139:68:2;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;1475:603::-;1830:10;;;1829:62;;-1:-1:-1;1846:39:2;;-1:-1:-1;;;1846:39:2;;1870:4;1846:39;;;7569:34:8;-1:-1:-1;;;;;7639:15:8;;;7619:18;;;7612:43;1846:15:2;;;;;7504:18:8;;1846:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:2;;7868:2:8;1808:163:2;;;7850:21:8;7907:2;7887:18;;;7880:30;7946:34;7926:18;;;7919:62;-1:-1:-1;;;7997:18:8;;;7990:52;8059:19;;1808:163:2;;;;;;;;;2008:62;;-1:-1:-1;;;;;8281:32:8;;2008:62:2;;;8263:51:8;8330:18;;;8323:34;;;1981:90:2;;2001:5;;-1:-1:-1;;;2031:22:2;8236:18:8;;2008:62:2;8089:274:8;1981:90:2;1475:603;;;:::o;2586:182:4:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;8525:19:8;;;;8560:12;;8553:28;8597:12;;2678:83:4;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;-1:-1:-1;;;;;3287:26:4;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;8775:19:8;;;-1:-1:-1;;;;;;8824:41:8;8819:2;8810:12;;8803:63;8891:2;8882:12;;8620:280;3569:546:4;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:4;;;;;;;;;;;;-1:-1:-1;;;3678:10:4;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:4;;-1:-1:-1;3805:2:4;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:4;-1:-1:-1;3827:34:4;-1:-1:-1;3883:3:4;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:4;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;4044:12:4;;;;;;;;-1:-1:-1;4070:7:4;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:4;3569:546;-1:-1:-1;;;;3569:546:4:o;3747:706:2:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:2;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:2;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:2;;10706:2:8;4351:85:2;;;10688:21:8;10745:2;10725:18;;;10718:30;10784:34;10764:18;;;10757:62;-1:-1:-1;;;10835:18:8;;;10828:40;10885:19;;4351:85:2;10504:406:8;897:1306:4;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;-1:-1:-1;;;;;1088:70:4;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:4:o;3873:223:3:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:3:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:3;;11117:2:8;5149:81:3;;;11099:21:8;11156:2;11136:18;;;11129:30;11195:34;11175:18;;;11168:62;-1:-1:-1;;;11246:18:8;;;11239:36;11292:19;;5149:81:3;10915:402:8;5149:81:3;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:3;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:3:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:3;;;7908:60;;;;-1:-1:-1;;;7908:60:3;;11816:2:8;7908:60:3;;;11798:21:8;11855:2;11835:18;;;11828:30;11894:31;11874:18;;;11867:59;11943:18;;7908:60:3;11614:353:8;7908:60:3;-1:-1:-1;8003:10:3;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:3;;;;;;;;:::i;235:180:8:-;294:6;347:2;335:9;326:7;322:23;318:32;315:52;;;363:1;360;353:12;315:52;-1:-1:-1;386:23:8;;235:180;-1:-1:-1;235:180:8:o;927:422::-;1004:6;1012;1020;1073:2;1061:9;1052:7;1048:23;1044:32;1041:52;;;1089:1;1086;1079:12;1041:52;1112:23;;;-1:-1:-1;1182:2:8;1167:18;;1154:32;;-1:-1:-1;1236:2:8;1221:18;;1208:32;-1:-1:-1;;;;;1269:31:8;;1259:42;;1249:70;;1315:1;1312;1305:12;1249:70;1338:5;1328:15;;;927:422;;;;;:::o;2173:118::-;2259:5;2252:13;2245:21;2238:5;2235:32;2225:60;;2281:1;2278;2271:12;2296:309;2361:6;2369;2422:2;2410:9;2401:7;2397:23;2393:32;2390:52;;;2438:1;2435;2428:12;2390:52;2474:9;2461:23;2451:33;;2534:2;2523:9;2519:18;2506:32;2547:28;2569:5;2547:28;:::i;:::-;2594:5;2584:15;;;2296:309;;;;;:::o;2818:184::-;2888:6;2941:2;2929:9;2920:7;2916:23;2912:32;2909:52;;;2957:1;2954;2947:12;2909:52;-1:-1:-1;2980:16:8;;2818:184;-1:-1:-1;2818:184:8:o;3007:250::-;3092:1;3102:113;3116:6;3113:1;3110:13;3102:113;;;3192:11;;;3186:18;3173:11;;;3166:39;3138:2;3131:10;3102:113;;;-1:-1:-1;;3249:1:8;3231:16;;3224:27;3007:250::o;3262:197::-;3303:3;3341:5;3335:12;3356:65;3414:6;3409:3;3402:4;3395:5;3391:16;3356:65;:::i;:::-;3437:16;;;;;3262:197;-1:-1:-1;;3262:197:8:o;3593:1966::-;-1:-1:-1;;;4537:3:8;4530:32;4512:3;4591:6;4585:13;4617:4;4630:73;4696:6;4691:2;4686:3;4682:12;4677:2;4669:6;4665:15;4630:73;:::i;:::-;-1:-1:-1;;;4762:2:8;4722:16;;;4754:11;;;4747:38;4810:13;;4832:74;4810:13;4884:11;;;4867:15;;;4832:74;:::i;:::-;-1:-1:-1;;;4925:17:8;;4958:11;;;4951:40;;;;5016:13;;5038:74;5016:13;5098:2;5090:11;;5073:15;;;5038:74;:::i;:::-;5154:2;5143:8;5139:2;5135:17;5131:26;5121:36;;;-1:-1:-1;;;5181:2:8;5177;5173:11;5166:38;5235:6;5229:13;5251:74;5316:8;5311:2;5307;5303:11;5298:2;5290:6;5286:15;5251:74;:::i;:::-;5367:2;5356:8;5352:2;5348:17;5344:26;5334:36;;;5399:34;5394:2;5390;5386:11;5379:55;;-1:-1:-1;;;5458:2:8;5454;5450:11;5443:26;5485:68;5515:37;5548:2;5544;5540:11;5532:6;5515:37;:::i;:::-;-1:-1:-1;;;3529:25:8;;3579:2;3570:12;;3464:124;5485:68;5478:75;3593:1966;-1:-1:-1;;;;;;;;3593:1966:8:o;5564:281::-;5616:3;5654:5;5648:12;5681:6;5676:3;5669:19;5697:76;5766:6;5759:4;5754:3;5750:14;5743:4;5736:5;5732:16;5697:76;:::i;:::-;5827:2;5806:15;-1:-1:-1;;5802:29:8;5793:39;;;;5834:4;5789:50;;5564:281;-1:-1:-1;;5564:281:8:o;5850:933::-;6195:4;6224:3;6254:2;6243:9;6236:21;6274:55;6325:2;6314:9;6310:18;6302:6;6274:55;:::i;:::-;-1:-1:-1;;;;;6403:15:8;;;6398:2;6383:18;;6376:43;6455:15;;;6450:2;6435:18;;6428:43;-1:-1:-1;;6507:15:8;;;6502:2;6487:18;;6480:43;6572:18;6560:31;;;;6554:3;6539:19;;6532:60;6629:15;;;;6356:3;6608:19;;6601:44;6676:3;6661:19;;6654:35;;;;6720:3;6705:19;;6698:35;;;;6764:3;6749:19;6742:35;;;;6266:63;5850:933;-1:-1:-1;5850:933:8:o;8905:127::-;8966:10;8961:3;8957:20;8954:1;8947:31;8997:4;8994:1;8987:15;9021:4;9018:1;9011:15;9037:135;9076:3;9097:17;;;9094:43;;9117:18;;:::i;:::-;-1:-1:-1;9164:1:8;9153:13;;9037:135::o;9177:127::-;9238:10;9233:3;9229:20;9226:1;9219:31;9269:4;9266:1;9259:15;9293:4;9290:1;9283:15;9309:217;9349:1;9375;9365:132;;9419:10;9414:3;9410:20;9407:1;9400:31;9454:4;9451:1;9444:15;9482:4;9479:1;9472:15;9365:132;-1:-1:-1;9511:9:8;;9309:217::o;9531:127::-;9592:10;9587:3;9583:20;9580:1;9573:31;9623:4;9620:1;9613:15;9647:4;9644:1;9637:15;9663:128;9730:9;;;9751:11;;;9748:37;;;9765:18;;:::i;:::-;9663:128;;;;:::o;9796:168::-;9836:7;9902:1;9898;9894:6;9890:14;9887:1;9884:21;9879:1;9872:9;9865:17;9861:45;9858:71;;;9909:18;;:::i;:::-;-1:-1:-1;9949:9:8;;9796:168::o;9969:148::-;10057:4;10036:12;;;10050;;;10032:31;;10075:13;;10072:39;;;10091:18;;:::i;10122:127::-;10183:10;10178:3;10174:20;10171:1;10164:31;10214:4;10211:1;10204:15;10238:4;10235:1;10228:15;10254:245;10321:6;10374:2;10362:9;10353:7;10349:23;10345:32;10342:52;;;10390:1;10387;10380:12;10342:52;10422:9;10416:16;10441:28;10463:5;10441:28;:::i;:::-;10488:5;10254:245;-1:-1:-1;;;10254:245:8:o;11322:287::-;11451:3;11489:6;11483:13;11505:66;11564:6;11559:3;11552:4;11544:6;11540:17;11505:66;:::i;:::-;11587:16;;;;;11322:287;-1:-1:-1;;11322:287:8:o;11972:230::-;12121:2;12110:9;12103:21;12084:4;12141:55;12192:2;12181:9;12177:18;12169:6;12141:55;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "1338": [
        {
          "start": 157,
          "length": 32
        },
        {
          "start": 681,
          "length": 32
        },
        {
          "start": 849,
          "length": 32
        },
        {
          "start": 902,
          "length": 32
        },
        {
          "start": 1136,
          "length": 32
        }
      ],
      "1341": [
        {
          "start": 267,
          "length": 32
        },
        {
          "start": 727,
          "length": 32
        },
        {
          "start": 936,
          "length": 32
        },
        {
          "start": 975,
          "length": 32
        },
        {
          "start": 1478,
          "length": 32
        }
      ],
      "1346": [
        {
          "start": 509,
          "length": 32
        },
        {
          "start": 1172,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assertDataFor(bytes32,bytes32,address)": "93ee663b",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "assertionsData(bytes32)": "b33893da",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "getData(bytes32)": "54f6127f",
    "oo()": "8921a614"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_optimisticOracleV3\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAssertionResolved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertDataFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionsData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DataAsserter.sol\":\"DataAsserter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uma/=lib/protocol/packages/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol\":{\"keccak256\":\"0xf8427cb144e47a47625df27e5182bd8f3774becf23d67fd16e51599bd1386bc5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://63d4212d86dfc755e5eead59e05038aaf889be3e9daee9fd9a8070825c7b8b8f\",\"dweb:/ipfs/QmQ87qqtqhSQdfdEjT3wPGSitQ9uPoyYToVu9WTECqYsQP\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871\",\"dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X\"]},\"src/DataAsserter.sol\":{\"keccak256\":\"0x74b77e619d1f1ce924d5f4a326bf139eff72fa695c6f3e89ab134a2e47a6aaf9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fc14e585b85901611ea1a63c317a1f57cde454dfb7888d50962af7e3471dfc1\",\"dweb:/ipfs/QmUGxtHsALdzXGfxTgsu2zr9ytj5ECX2uZRuURgtq9cNvT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_optimisticOracleV3",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAsserted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAssertionResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertDataFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionsData",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "resolved",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uma/=lib/protocol/packages/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":protocol/=lib/protocol/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/DataAsserter.sol": "DataAsserter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol": {
        "keccak256": "0xf8427cb144e47a47625df27e5182bd8f3774becf23d67fd16e51599bd1386bc5",
        "urls": [
          "bzz-raw://63d4212d86dfc755e5eead59e05038aaf889be3e9daee9fd9a8070825c7b8b8f",
          "dweb:/ipfs/QmQ87qqtqhSQdfdEjT3wPGSitQ9uPoyYToVu9WTECqYsQP"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00",
        "urls": [
          "bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871",
          "dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/DataAsserter.sol": {
        "keccak256": "0x74b77e619d1f1ce924d5f4a326bf139eff72fa695c6f3e89ab134a2e47a6aaf9",
        "urls": [
          "bzz-raw://5fc14e585b85901611ea1a63c317a1f57cde454dfb7888d50962af7e3471dfc1",
          "dweb:/ipfs/QmUGxtHsALdzXGfxTgsu2zr9ytj5ECX2uZRuURgtq9cNvT"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/DataAsserter.sol",
    "id": 1622,
    "exportedSymbols": {
      "Address": [
        724
      ],
      "ClaimData": [
        1132
      ],
      "DataAsserter": [
        1621
      ],
      "IERC20": [
        77
      ],
      "IERC20Permit": [
        113
      ],
      "OptimisticOracleV3Interface": [
        1326
      ],
      "SafeERC20": [
        394
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:5707:7",
    "nodes": [
      {
        "id": 1328,
        "nodeType": "PragmaDirective",
        "src": "42:23:7",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1329,
        "nodeType": "ImportDirective",
        "src": "67:79:7",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/implementation/ClaimData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1622,
        "sourceUnit": 1137,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1330,
        "nodeType": "ImportDirective",
        "src": "147:93:7",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1622,
        "sourceUnit": 1327,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1331,
        "nodeType": "ImportDirective",
        "src": "241:65:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1622,
        "sourceUnit": 395,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1621,
        "nodeType": "ContractDefinition",
        "src": "709:5039:7",
        "nodes": [
          {
            "id": 1335,
            "nodeType": "UsingForDirective",
            "src": "737:27:7",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1332,
              "name": "SafeERC20",
              "nameLocations": [
                "743:9:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 394,
              "src": "743:9:7"
            },
            "typeName": {
              "id": 1334,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1333,
                "name": "IERC20",
                "nameLocations": [
                  "757:6:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 77,
                "src": "757:6:7"
              },
              "referencedDeclaration": 77,
              "src": "757:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$77",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1338,
            "nodeType": "VariableDeclaration",
            "src": "769:39:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "20402e1d",
            "mutability": "immutable",
            "name": "defaultCurrency",
            "nameLocation": "793:15:7",
            "scope": 1621,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$77",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1337,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1336,
                "name": "IERC20",
                "nameLocations": [
                  "769:6:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 77,
                "src": "769:6:7"
              },
              "referencedDeclaration": 77,
              "src": "769:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$77",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1341,
            "nodeType": "VariableDeclaration",
            "src": "814:47:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "8921a614",
            "mutability": "immutable",
            "name": "oo",
            "nameLocation": "859:2:7",
            "scope": 1621,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 1340,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1339,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "814:27:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1326,
                "src": "814:27:7"
              },
              "referencedDeclaration": 1326,
              "src": "814:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1344,
            "nodeType": "VariableDeclaration",
            "src": "867:47:7",
            "nodes": [],
            "constant": true,
            "functionSelector": "b75d4e24",
            "mutability": "constant",
            "name": "assertionLiveness",
            "nameLocation": "890:17:7",
            "scope": 1621,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 1342,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "867:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "37323030",
              "id": 1343,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "910:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7200_by_1",
                "typeString": "int_const 7200"
              },
              "value": "7200"
            },
            "visibility": "public"
          },
          {
            "id": 1346,
            "nodeType": "VariableDeclaration",
            "src": "920:42:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "d509b017",
            "mutability": "immutable",
            "name": "defaultIdentifier",
            "nameLocation": "945:17:7",
            "scope": 1621,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1345,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "920:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1355,
            "nodeType": "StructDefinition",
            "src": "969:281:7",
            "nodes": [],
            "canonicalName": "DataAsserter.DataAssertion",
            "members": [
              {
                "constant": false,
                "id": 1348,
                "mutability": "mutable",
                "name": "dataId",
                "nameLocation": "1008:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1355,
                "src": "1000:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1347,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1350,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1065:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 1355,
                "src": "1057:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1349,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1057:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1352,
                "mutability": "mutable",
                "name": "asserter",
                "nameLocation": "1128:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 1355,
                "src": "1120:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1351,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1120:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1354,
                "mutability": "mutable",
                "name": "resolved",
                "nameLocation": "1191:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 1355,
                "src": "1186:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1353,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1186:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DataAssertion",
            "nameLocation": "976:13:7",
            "scope": 1621,
            "visibility": "public"
          },
          {
            "id": 1360,
            "nodeType": "VariableDeclaration",
            "src": "1256:55:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "b33893da",
            "mutability": "mutable",
            "name": "assertionsData",
            "nameLocation": "1297:14:7",
            "scope": 1621,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
              "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion)"
            },
            "typeName": {
              "id": 1359,
              "keyType": {
                "id": 1356,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1264:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1256:33:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
                "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion)"
              },
              "valueType": {
                "id": 1358,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1357,
                  "name": "DataAssertion",
                  "nameLocations": [
                    "1275:13:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1355,
                  "src": "1275:13:7"
                },
                "referencedDeclaration": 1355,
                "src": "1275:13:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DataAssertion_$1355_storage_ptr",
                  "typeString": "struct DataAsserter.DataAssertion"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1370,
            "nodeType": "EventDefinition",
            "src": "1318:150:7",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "29ae27364abd65b112ad0ac18e7e4f97360c20afa9636864dc91195d4d9204ec",
            "name": "DataAsserted",
            "nameLocation": "1324:12:7",
            "parameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1362,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "1362:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1346:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1364,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1386:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1378:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1366,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "1416:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1400:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1368,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1450:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1434:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:131:7"
            }
          },
          {
            "id": 1380,
            "nodeType": "EventDefinition",
            "src": "1474:159:7",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e49ab75dd8ad20084c43aacc9218434d61af074f44263f887212c41ad2d41c9d",
            "name": "DataAssertionResolved",
            "nameLocation": "1480:21:7",
            "parameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1372,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "1527:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "1511:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1374,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1551:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "1543:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1373,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1376,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "1581:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "1565:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1378,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1615:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "1599:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1501:131:7"
            }
          },
          {
            "id": 1406,
            "nodeType": "FunctionDefinition",
            "src": "1639:241:7",
            "nodes": [],
            "body": {
              "id": 1405,
              "nodeType": "Block",
              "src": "1706:174:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1387,
                      "name": "defaultCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "1716:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1389,
                          "name": "_defaultCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1382,
                          "src": "1741:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1388,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1734:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1734:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1716:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1392,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:42:7"
                },
                {
                  "expression": {
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1393,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1341,
                      "src": "1768:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1395,
                          "name": "_optimisticOracleV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "1801:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1394,
                        "name": "OptimisticOracleV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1326,
                        "src": "1773:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$1326_$",
                          "typeString": "type(contract OptimisticOracleV3Interface)"
                        }
                      },
                      "id": 1396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1773:48:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "src": "1768:53:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                      "typeString": "contract OptimisticOracleV3Interface"
                    }
                  },
                  "id": 1398,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:53:7"
                },
                {
                  "expression": {
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1399,
                      "name": "defaultIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "1831:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1400,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "1851:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 1401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1854:17:7",
                        "memberName": "defaultIdentifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1189,
                        "src": "1851:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view external returns (bytes32)"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1851:22:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1831:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:42:7"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1382,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "1659:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "1651:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1384,
                  "mutability": "mutable",
                  "name": "_optimisticOracleV3",
                  "nameLocation": "1685:19:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "1677:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:55:7"
            },
            "returnParameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1706:0:7"
            },
            "scope": 1621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1433,
            "nodeType": "FunctionDefinition",
            "src": "1999:208:7",
            "nodes": [],
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "2073:134:7",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2087:37:7",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1415,
                          "name": "assertionsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1360,
                          "src": "2088:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
                            "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                          }
                        },
                        "id": 1417,
                        "indexExpression": {
                          "id": 1416,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1408,
                          "src": "2103:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2088:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataAssertion_$1355_storage",
                          "typeString": "struct DataAsserter.DataAssertion storage ref"
                        }
                      },
                      "id": 1418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2116:8:7",
                      "memberName": "resolved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1354,
                      "src": "2088:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1424,
                  "nodeType": "IfStatement",
                  "src": "2083:60:7",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2134:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 1421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2141:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 1422,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2133:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 1414,
                    "id": 1423,
                    "nodeType": "Return",
                    "src": "2126:17:7"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2161:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1426,
                            "name": "assertionsData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "2167:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
                              "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                            }
                          },
                          "id": 1428,
                          "indexExpression": {
                            "id": 1427,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1408,
                            "src": "2182:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2167:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataAssertion_$1355_storage",
                            "typeString": "struct DataAsserter.DataAssertion storage ref"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2195:4:7",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1350,
                        "src": "2167:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 1430,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2160:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
                  "functionReturnParameters": 1414,
                  "id": 1431,
                  "nodeType": "Return",
                  "src": "2153:47:7"
                }
              ]
            },
            "functionSelector": "54f6127f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nameLocation": "2008:7:7",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2024:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "2016:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2016:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2015:21:7"
            },
            "returnParameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "2058:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "2064:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:15:7"
            },
            "scope": 1621,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1564,
            "nodeType": "FunctionDefinition",
            "src": "2594:2112:7",
            "nodes": [],
            "body": {
              "id": 1563,
              "nodeType": "Block",
              "src": "2732:1974:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1444,
                      "name": "asserter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "2742:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1445,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "2753:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2773:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2765:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1446,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2765:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2765:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2753:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 1453,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "2791:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2753:46:7",
                      "trueExpression": {
                        "expression": {
                          "id": 1451,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2778:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2782:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2778:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2742:57:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1456,
                  "nodeType": "ExpressionStatement",
                  "src": "2742:57:7"
                },
                {
                  "assignments": [
                    1458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1458,
                      "mutability": "mutable",
                      "name": "bond",
                      "nameLocation": "2817:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "2809:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1457,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2809:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1466,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1463,
                            "name": "defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "2850:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2842:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2842:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2842:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1459,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "2824:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 1460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2827:14:7",
                      "memberName": "getMinimumBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "2824:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2824:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2809:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1470,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2910:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2914:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2910:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2930:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DataAsserter_$1621",
                              "typeString": "contract DataAsserter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DataAsserter_$1621",
                              "typeString": "contract DataAsserter"
                            }
                          ],
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2922:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2922:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2922:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1476,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "2937:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1467,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "2877:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2893:16:7",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 171,
                      "src": "2877:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2877:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1484,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "2988:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                              "typeString": "contract OptimisticOracleV3Interface"
                            }
                          ],
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2980:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1482,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2980:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2980:11:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1486,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "2993:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1479,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "2952:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2968:11:7",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 215,
                      "src": "2952:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1488,
                  "nodeType": "ExpressionStatement",
                  "src": "2952:46:7"
                },
                {
                  "expression": {
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1489,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1442,
                      "src": "3599:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "446174612061737365727465643a203078",
                              "id": 1494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3675:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd4bb6e587bcb4e9ccfeb83af87f5ccb8bd2cb66789d7f423172a716009443de",
                                "typeString": "literal_string \"Data asserted: 0x\""
                              },
                              "value": "Data asserted: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1497,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1437,
                                  "src": "3802:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1495,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "3780:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$1132_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3790:11:7",
                                "memberName": "toUtf8Bytes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 888,
                                "src": "3780:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes32) pure returns (bytes memory)"
                                }
                              },
                              "id": 1498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3780:27:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20666f72206461746149643a203078",
                              "id": 1499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3825:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_638fd457175c192537aad87792f9f955f696ff6a04cd4ef012ec52d324a42afc",
                                "typeString": "literal_string \" for dataId: 0x\""
                              },
                              "value": " for dataId: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1502,
                                  "name": "dataId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1435,
                                  "src": "3882:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1500,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "3860:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$1132_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3870:11:7",
                                "memberName": "toUtf8Bytes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 888,
                                "src": "3860:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes32) pure returns (bytes memory)"
                                }
                              },
                              "id": 1503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3860:29:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20616e642061737365727465723a203078",
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3907:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c77a658518de669f0fa22457f32e31788885c7b0e4a4f4dc1fa539e8ef29dedf",
                                "typeString": "literal_string \" and asserter: 0x\""
                              },
                              "value": " and asserter: 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1507,
                                  "name": "asserter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1439,
                                  "src": "3973:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1505,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "3944:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$1132_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3954:18:7",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 921,
                                "src": "3944:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 1508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3944:38:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2061742074696d657374616d703a20",
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4000:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              "value": " at timestamp: "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1512,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4061:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4067:9:7",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4061:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1510,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "4035:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$1132_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4045:15:7",
                                "memberName": "toUtf8BytesUint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1014,
                                "src": "4035:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes memory)"
                                }
                              },
                              "id": 1514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4035:42:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20696e207468652044617461417373657274657220636f6e7472616374206174203078",
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4095:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              "value": " in the DataAsserter contract at 0x"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1520,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4187:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DataAsserter_$1621",
                                        "typeString": "contract DataAsserter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DataAsserter_$1621",
                                        "typeString": "contract DataAsserter"
                                      }
                                    ],
                                    "id": 1519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4179:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1518,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4179:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4179:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1516,
                                  "name": "ClaimData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "4150:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AncillaryData_$1132_$",
                                    "typeString": "type(library AncillaryData)"
                                  }
                                },
                                "id": 1517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4160:18:7",
                                "memberName": "toUtf8BytesAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 921,
                                "src": "4150:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address) pure returns (bytes memory)"
                                }
                              },
                              "id": 1522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4150:43:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "2069732076616c69642e",
                              "id": 1523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4211:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20bfd04ae1bee43451119cb1b01a54a4c3a07e53130737b515dfe8a851c01b90",
                                "typeString": "literal_string \" is valid.\""
                              },
                              "value": " is valid."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd4bb6e587bcb4e9ccfeb83af87f5ccb8bd2cb66789d7f423172a716009443de",
                                "typeString": "literal_string \"Data asserted: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_638fd457175c192537aad87792f9f955f696ff6a04cd4ef012ec52d324a42afc",
                                "typeString": "literal_string \" for dataId: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c77a658518de669f0fa22457f32e31788885c7b0e4a4f4dc1fa539e8ef29dedf",
                                "typeString": "literal_string \" and asserter: 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b443ca68139ec97c71a0472cd1c95aa0b393309e576d65ab97caf7affa69a49",
                                "typeString": "literal_string \" at timestamp: \""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca440c0140d48ac69e555e32fbe16eceb8ce3061228f28ba3b8559a881e5e9a8",
                                "typeString": "literal_string \" in the DataAsserter contract at 0x\""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20bfd04ae1bee43451119cb1b01a54a4c3a07e53130737b515dfe8a851c01b90",
                                "typeString": "literal_string \" is valid.\""
                              }
                            ],
                            "expression": {
                              "id": 1492,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3641:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3645:12:7",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3641:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3641:596:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 1525,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "4251:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1528,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4281:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DataAsserter_$1621",
                                "typeString": "contract DataAsserter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DataAsserter_$1621",
                                "typeString": "contract DataAsserter"
                              }
                            ],
                            "id": 1527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4273:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1526,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4273:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4273:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4308:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4300:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1530,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4300:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1534,
                          "name": "assertionLiveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1344,
                          "src": "4350:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 1535,
                          "name": "defaultCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "4381:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 1536,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1458,
                          "src": "4410:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1537,
                          "name": "defaultIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1346,
                          "src": "4428:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4467:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4459:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1538,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4459:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4459:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 1490,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "3613:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 1491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3616:11:7",
                        "memberName": "assertTruth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1233,
                        "src": "3613:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$77_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) external returns (bytes32)"
                        }
                      },
                      "id": 1542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3613:880:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3599:894:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:894:7"
                },
                {
                  "expression": {
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1545,
                        "name": "assertionsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1360,
                        "src": "4503:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
                          "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                        }
                      },
                      "id": 1547,
                      "indexExpression": {
                        "id": 1546,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "4518:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4503:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DataAssertion_$1355_storage",
                        "typeString": "struct DataAsserter.DataAssertion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1549,
                          "name": "dataId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "4560:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1550,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "4580:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1551,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "4598:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4620:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1548,
                        "name": "DataAssertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "4533:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DataAssertion_$1355_storage_ptr_$",
                          "typeString": "type(struct DataAsserter.DataAssertion storage pointer)"
                        }
                      },
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4533:102:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DataAssertion_$1355_memory_ptr",
                        "typeString": "struct DataAsserter.DataAssertion memory"
                      }
                    },
                    "src": "4503:132:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DataAssertion_$1355_storage",
                      "typeString": "struct DataAsserter.DataAssertion storage ref"
                    }
                  },
                  "id": 1555,
                  "nodeType": "ExpressionStatement",
                  "src": "4503:132:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1557,
                        "name": "dataId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1435,
                        "src": "4663:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1558,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "4671:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1559,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "4677:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1560,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "4687:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1556,
                      "name": "DataAsserted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "4650:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address,bytes32)"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4650:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "EmitStatement",
                  "src": "4645:54:7"
                }
              ]
            },
            "functionSelector": "93ee663b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertDataFor",
            "nameLocation": "2603:13:7",
            "parameters": {
              "id": 1440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "dataId",
                  "nameLocation": "2634:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "2626:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2658:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "2650:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1439,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "2680:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "2672:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2616:78:7"
            },
            "returnParameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1442,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "2719:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "2711:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2711:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2710:21:7"
            },
            "scope": 1621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1614,
            "nodeType": "FunctionDefinition",
            "src": "4756:728:7",
            "nodes": [],
            "body": {
              "id": 1613,
              "nodeType": "Block",
              "src": "4866:618:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1572,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4884:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4888:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4884:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1576,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "4906:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1326",
                                "typeString": "contract OptimisticOracleV3Interface"
                              }
                            ],
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4898:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1574,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4898:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4898:11:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4884:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4876:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4876:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1580,
                  "nodeType": "ExpressionStatement",
                  "src": "4876:34:7"
                },
                {
                  "condition": {
                    "id": 1581,
                    "name": "assertedTruthfully",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1568,
                    "src": "4999:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 1610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "delete",
                      "prefix": true,
                      "src": "5443:34:7",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1607,
                          "name": "assertionsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1360,
                          "src": "5450:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
                            "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                          }
                        },
                        "id": 1609,
                        "indexExpression": {
                          "id": 1608,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "5465:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "5450:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataAssertion_$1355_storage",
                          "typeString": "struct DataAsserter.DataAssertion storage ref"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1611,
                    "nodeType": "ExpressionStatement",
                    "src": "5443:34:7"
                  },
                  "id": 1612,
                  "nodeType": "IfStatement",
                  "src": "4995:482:7",
                  "trueBody": {
                    "id": 1606,
                    "nodeType": "Block",
                    "src": "5019:418:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1582,
                                "name": "assertionsData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1360,
                                "src": "5033:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
                                  "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                                }
                              },
                              "id": 1584,
                              "indexExpression": {
                                "id": 1583,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1566,
                                "src": "5048:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5033:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataAssertion_$1355_storage",
                                "typeString": "struct DataAsserter.DataAssertion storage ref"
                              }
                            },
                            "id": 1585,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5061:8:7",
                            "memberName": "resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1354,
                            "src": "5033:36:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5072:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5033:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1588,
                        "nodeType": "ExpressionStatement",
                        "src": "5033:43:7"
                      },
                      {
                        "assignments": [
                          1591
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1591,
                            "mutability": "mutable",
                            "name": "dataAssertion",
                            "nameLocation": "5111:13:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1606,
                            "src": "5090:34:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DataAssertion_$1355_memory_ptr",
                              "typeString": "struct DataAsserter.DataAssertion"
                            },
                            "typeName": {
                              "id": 1590,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1589,
                                "name": "DataAssertion",
                                "nameLocations": [
                                  "5090:13:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1355,
                                "src": "5090:13:7"
                              },
                              "referencedDeclaration": 1355,
                              "src": "5090:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataAssertion_$1355_storage_ptr",
                                "typeString": "struct DataAsserter.DataAssertion"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1595,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1592,
                            "name": "assertionsData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "5127:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DataAssertion_$1355_storage_$",
                              "typeString": "mapping(bytes32 => struct DataAsserter.DataAssertion storage ref)"
                            }
                          },
                          "id": 1594,
                          "indexExpression": {
                            "id": 1593,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1566,
                            "src": "5142:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5127:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DataAssertion_$1355_storage",
                            "typeString": "struct DataAsserter.DataAssertion storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5090:64:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1597,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1591,
                                "src": "5212:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1355_memory_ptr",
                                  "typeString": "struct DataAsserter.DataAssertion memory"
                                }
                              },
                              "id": 1598,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5226:6:7",
                              "memberName": "dataId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1348,
                              "src": "5212:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1599,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1591,
                                "src": "5250:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1355_memory_ptr",
                                  "typeString": "struct DataAsserter.DataAssertion memory"
                                }
                              },
                              "id": 1600,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5264:4:7",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1350,
                              "src": "5250:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1601,
                                "name": "dataAssertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1591,
                                "src": "5286:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DataAssertion_$1355_memory_ptr",
                                  "typeString": "struct DataAsserter.DataAssertion memory"
                                }
                              },
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5300:8:7",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1352,
                              "src": "5286:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1603,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "5326:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1596,
                            "name": "DataAssertionResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "5173:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,address,bytes32)"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5173:178:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1605,
                        "nodeType": "EmitStatement",
                        "src": "5168:183:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f1b156b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionResolvedCallback",
            "nameLocation": "4765:25:7",
            "parameters": {
              "id": 1569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1566,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "4808:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "4800:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1568,
                  "mutability": "mutable",
                  "name": "assertedTruthfully",
                  "nameLocation": "4834:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "4829:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4829:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4790:68:7"
            },
            "returnParameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4866:0:7"
            },
            "scope": 1621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1620,
            "nodeType": "FunctionDefinition",
            "src": "5681:65:7",
            "nodes": [],
            "body": {
              "id": 1619,
              "nodeType": "Block",
              "src": "5744:2:7",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "d448a4ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionDisputedCallback",
            "nameLocation": "5690:25:7",
            "parameters": {
              "id": 1617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1616,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "5724:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1620,
                  "src": "5716:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1615,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5716:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5715:21:7"
            },
            "returnParameters": {
              "id": 1618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5744:0:7"
            },
            "scope": 1621,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DataAsserter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1621
        ],
        "name": "DataAsserter",
        "nameLocation": "718:12:7",
        "scope": 1622,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 7
}